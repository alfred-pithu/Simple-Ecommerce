https://docs.google.com/forms/d/e/1FAIpQLSf3pZKyhDik8thDmYRRdR-6UVy8W6HcPkXgHGMnDXVFA4qfaQ/viewform

-------------------------------------------------------------
1. Login & Home/Landing View 

     a. Register View 

2. Product List View / Product Detail View 

3. Cart View / Checkout View 

     a. Delete Product from Cart 

4. Admin Dashboard / Overview / Summary 

5. Admin Customers List / Customer Detail View 

     a. Add Customer 

6. Admin Order List / Admin Order Detail View 

7. Admin Product List / Product Detail View 

     a. Add Product  
-------------------------------------------------------------


 1 -Project Setup:

Set up a new ReactJS project with NextJS using the create-next-app command or any other preferred method.
Configure Tailwind CSS v3+ with NextJS. You can follow the official Next.js documentation and Tailwind CSS documentation for setup instructions.

 2 - Login & Home/Landing View:

Create a login form component where users can enter their phone number and password.
Implement validation and form submission handling.
Upon successful login, navigate the user to the home/landing view.
Design the home/landing view with a welcome message and relevant information.

 3 - Register View:

Create a registration form component for users to sign up with a Bangladeshi phone number and password.
Implement validation and form submission handling.
After successful registration, redirect the user to the login view.

 4 - Product List View / Product Detail View:

Design a product list view component to display a list of products.
Fetch the product data from a JSON file (you can either hardcode the data or serve it from a remote repository using Axios or similar libraries).
Render each product item with relevant information and a link to the product detail view.
Implement navigation to the product detail view when a user clicks on a product.

 5 - Cart View / Checkout View:

Create a cart view component to display the products added by the user.
Manage the cart state using React's state management (e.g., useState hook).
Allow users to add or remove products from the cart.
Implement a checkout view component to finalize the purchase process.

 6 - Admin Dashboard / Overview / Summary:

Design an admin dashboard view that provides an overview and summary of the e-commerce store's key metrics.
Display relevant statistics and charts to visualize the data.
You can use open-source UI kits for data visualization if needed.

 7 - Admin Customers List / Customer Detail View:

Create an admin customers list view to display a list of customers.
Fetch the customer data from a JSON file (similar to the product list view).
Render each customer item with relevant information and a link to the customer detail view.
Implement navigation to the customer detail view when a user clicks on a customer.

 8 - Add Customer:

Design a form component to add a new customer to the e-commerce system.
Implement validation and form submission handling.
Upon successful customer addition, update the customer list view.

 9 - Admin Order List / Admin Order Detail View:

Create an admin order list view to display a list of orders.
Fetch the order data from a JSON file (similar to the product and customer list views).
Render each order item with relevant information and a link to the order detail view.
Implement navigation to the order detail view when a user clicks on an order.

 10 - Admin Product List / Product Detail View:

Design an admin product list view to display a list of products.
Fetch the product data from a JSON file (similar to the previous product list view).
Render each product item with relevant information and a link to the product detail view.
Implement navigation to the product detail view
